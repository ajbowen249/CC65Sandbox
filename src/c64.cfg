# Config file taken from
# https://sourceforge.net/p/cc65/mailman/message/35976889/
FEATURES {
    STARTADDRESS: default = $0801;
}

SYMBOLS {
    __LOADADDR__:  type = import;
    __EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $0800; # 2k stack
    __HIMEM__:     type = weak, value = $D000;
}

MEMORY {
    ZP:       file = "", define = yes, start = $0002, size = $001A;
    LOADADDR: file = %O,               start = $07FF, size = $0002;
    HEADER:   file = %O, define = yes, start = $0801, size = $000D;
    STARTRAM: file = %O, define = yes, start = $080D, size = $07F3, fill = yes;
    MUSIC:    file = %O, define = yes, start = $1000, size = $1000, fill = yes;
    SPRITES:  file = %O, define = yes, start = $2000, size = $1000, fill = yes;
    MAIN:     file = %O, define = yes, start = $3000, size = __HIMEM__ - $3000;
    BSS:      file = "", start = __ONCE_RUN__, size = __HIMEM__ - __STACKSIZE__ - __ONCE_RUN__;
}

SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    LOADADDR: load = LOADADDR, type = ro;
    LOWCODE:  load = MAIN,     type = ro,  optional = yes;
    EXEHDR:   load = HEADER,   type = ro;
    STARTUP:  load = STARTRAM, type = ro;
    # music:  load = MUSIC,  type = ro; # unused
    sprites:  load = SPRITES,  type = ro;
    CODE:     load = MAIN,     type = ro;
    RODATA:   load = MAIN,     type = ro;
    DATA:     load = MAIN,     type = rw;
    INIT:     load = MAIN,     type = rw;
    ONCE:     load = MAIN,     type = ro,  define   = yes;
    BSS:      load = BSS,      type = bss, define   = yes;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = INIT;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
